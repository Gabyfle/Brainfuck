; Generated by Brainfuck, a brainfuck compiler written in OCaml
;   @author Gabriel Santamaria <gaby.santamaria@outlook.fr>

; During the process, EDX will carry the cell address

; System calls macros
; write to ebx
%define SYS_WRITE 4
; read from ebx
%define SYS_READ  3
; exit program
%define SYS_EXIT  1

section .data
    ; Error messages
    out_of_bounds dw "You tried to access to a memory case that is out of bounds", 0xA
    oob_len equ $ - out_of_bounds

    ; This "pointer" will be used to know which memory case we're working on
    pointer db 1 ; this will be used to point to adresses in stack 

section .text
    global _start
    _start:
        mov edx, esp
        add edx, [pointer]

        {{code}}

        mov eax, SYS_EXIT
        mov ebx, 0
        int 0x80

    _error_OOB: ; out of bounds error
        mov eax, SYS_WRITE
        mov ebx, 1
        mov ecx, out_of_bounds
        mov edx, oob_len
        int 0x80

        mov eax, SYS_EXIT ; exit the program after this error
        mov ebx, 0
        int 0x80
